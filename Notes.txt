Timeline of creation:
1. centos-build-dockerfile
2. docker-compose.yml
3. copy_ssh_key.cmd/sh     // this is to copy the ssh private key from remote-host to jenkins container.
4. id_rsa
5. id_rsa.pub
6. db_script.sh // to upload the MYSQL-database-dump to aws S3 bucket.

8.  directory pipeline ---> 8 to _
9. Jenkinsfile
10. Dockerfile
11. push_docker_java.sh
12. deploy.sh
13. prod_env -> prod_deploy.sh
14. prod_env -> prod_docker_compose.yml
15. prod_env -> prod_jenkins_dockerfile
16. custom-hooks.sh

===================================================================================
COMMANDS USED:

$ docker-compose build
$ docker-compose up
$ ssh -i <ssh client key> user@ssh-server-url

from remote host to get connected with mysql-server within the samenetwork
$ mysql -h devops_db-host_1 -u root -p


// GENERATE SSH KEY PAIR IN REMOTE-HOST AND COPY THE PUBLIC KEY TO AUTHORIZED-KEYS
// IN REMOTE_USER AND PRIVATE KEY INTO JENKINS CONTANERS SSH DIRECTORY

// inside remote_host
$ ssh-keygen -t rsa -b 2048 -m PEM <optional-filename>
   or
$ ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""

$ docker cp devops_remote_host_1:/root/.ssh/id_rsa.pub ./id_rsa.pub
$ cat id_rsa.pub > /home/remote_user/.ssh/authorized_keys
$ docker cp ./id_rsa devops_jenkins_1:/root/.ssh/id_rsa

// TO TRANSFER FILES OVER SCP AND TO RUN CMD OVER SSH:
$ scp -i <privatekey> <host-file-path> user@host:<remote-file-path>
$ ssh -i <privatekey> user@host "command-to-execute"


// DOCKER PRODUCTION SERVER SETUP
Note: This is a Alpine based Linux container.
   All linux containers don't have open ssh 22 port.
   Either cause they are meant to be client machines or coz of security reasons.
   So, to setup a ssh server 
   $ apk add openssh
   $ vi /etc/ssh/sshd_config -> PermitRootLogin yes and uncomment # Port 22
   $ service sshd restart
   $ docker run -ti --name devops_prod_docker_1 --network devops_net -v devops_docker-certs-ca:/certs/ca -v devops_docker-certs-client:/certs/client docker:latest




===================================================================================
NOTES:
   TODO: FOR MORE DETAILED INFORMATION ON THE ENTIRE PROCESS, CMDS, DSL, AND NOTES
   REFER TO GITLAB REPOSITORY 'Notes' -> Jenkins-notes.txt.

C:\Users\sudar\space-1\GitLabPersonal\devops\remote_key

mysql client and aws client is installed in remote_host.
mysql server is published at port 3307:3306

PROBLEM STATEMENT:
1.
   W.R.T Timeline of creation, Until step 7, all contents are towards creating 
   3 images '1. Jenkins, 2. Centos-remote_host, 3. my-sql Database.' And 
   setting up the ssh key pairs, deploying the Database backup to AWS S3 bucket
   using aws CLI. Also automating this process using bash script.
2.
   From step 8, all the steps are towards building a maven project -> automating the build, test, docker-hub 
   push using separate bash scripts in corresponding stages of the jenkinsfile. -> a deploy script is used to
   transfer the docker-auth detials, image details to the production server for deployment over scp.
   The production server, has another deploy script, which pulls the docker image and runs the container.
   This deploy script in production server is triggered by a command over ssh.
   cmd used are ssh, scp, sed


===================================================================================







